[
  {
    "inputs": [
      {
        "internalType": "contract QOS",
        "name": "qosInstance",
        "type": "address"
      },
      {
        "internalType": "contract NetworkStats",
        "name": "netStatsInstance",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "NodeKickedOut",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "NodeSlashed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "finishTask",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAvailableGPUs",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "vram",
            "type": "uint256"
          }
        ],
        "internalType": "struct Node.GPUInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAvailableNodes",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "getNodeInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum Node.NodeStatus",
            "name": "status",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "gpuID",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "vram",
                "type": "uint256"
              }
            ],
            "internalType": "struct Node.GPUInfo",
            "name": "gpu",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "score",
            "type": "uint256"
          },
          {
            "internalType": "uint256[3]",
            "name": "version",
            "type": "uint256[3]"
          },
          {
            "internalType": "bytes",
            "name": "publicKey",
            "type": "bytes"
          },
          {
            "internalType": "string[]",
            "name": "lastModelIDs",
            "type": "string[]"
          },
          {
            "internalType": "string[]",
            "name": "localModelIDs",
            "type": "string[]"
          }
        ],
        "internalType": "struct Node.NodeInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "getNodeStatus",
    "outputs": [
      {
        "internalType": "enum Node.NodeStatus",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "getStakedAmount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "gpuName",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "gpuVram",
        "type": "uint256"
      },
      {
        "internalType": "uint256[3]",
        "name": "version",
        "type": "uint256[3]"
      },
      {
        "internalType": "bytes",
        "name": "publicKey",
        "type": "bytes"
      },
      {
        "internalType": "string[]",
        "name": "modelIDs",
        "type": "string[]"
      }
    ],
    "name": "join",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "modelID",
        "type": "string"
      }
    ],
    "name": "nodeContainsModelID",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "quit",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "seed",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "minimumVRAM",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "requiredGPU",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "requiredGPUVRAM",
        "type": "uint256"
      },
      {
        "internalType": "uint256[3]",
        "name": "taskVersion",
        "type": "uint256[3]"
      },
      {
        "internalType": "string[]",
        "name": "modelIDs",
        "type": "string[]"
      }
    ],
    "name": "randomSelectAvailableNode",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "seed",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "minimumVRAM",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "requiredGPU",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "requiredGPUVRAM",
        "type": "uint256"
      },
      {
        "internalType": "uint256[3]",
        "name": "taskVersion",
        "type": "uint256[3]"
      },
      {
        "internalType": "string",
        "name": "modelID",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      }
    ],
    "name": "randomSelectNodesWithoutModelID",
    "outputs": [
      {
        "internalType": "address[]",
        "name": "",
        "type": "address[]"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "modelID",
        "type": "string"
      }
    ],
    "name": "reportModelDownloaded",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "resume",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "slash",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nodeAddress",
        "type": "address"
      }
    ],
    "name": "startTask",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "taskContract",
        "type": "address"
      }
    ],
    "name": "updateTaskContractAddress",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[3]",
        "name": "version",
        "type": "uint256[3]"
      }
    ],
    "name": "updateVersion",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
